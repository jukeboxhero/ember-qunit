{"version":3,"file":"index.js","sources":["../src/index.js"],"sourcesContent":["/* globals Testem */\nimport { macroCondition, getOwnConfig, importSync } from '@embroider/macros';\n\n/**\n * Load qunit-default theme by default, if no custom theme is specified.\n */\nif (\n  macroCondition(\n    getOwnConfig()?.theme === undefined ||\n      getOwnConfig()?.theme === 'qunit-default' ||\n      getOwnConfig()?.theme === 'ember'\n  )\n) {\n  importSync('qunit/qunit/qunit.css');\n}\n\nif (macroCondition(!getOwnConfig()?.disableContainerStyles)) {\n  importSync('./test-container-styles.css');\n}\n\nif (macroCondition(getOwnConfig()?.theme === 'ember')) {\n  importSync('qunit-theme-ember/qunit.css');\n}\n\nexport { default as QUnitAdapter, nonTestDoneCallback } from './adapter';\n\nimport './qunit-configuration';\n\nif (typeof Testem !== 'undefined') {\n  Testem.hookIntoTestFramework();\n}\n\nimport { _backburner } from '@ember/runloop';\nimport { resetOnerror, getTestMetadata } from '@ember/test-helpers';\nimport Ember from 'ember';\nimport * as QUnit from 'qunit';\nimport QUnitAdapter from './adapter';\nimport {\n  setupContext,\n  teardownContext,\n  setupRenderingContext,\n  setupApplicationContext,\n  validateErrorHandler,\n} from '@ember/test-helpers';\nimport { installTestNotIsolatedHook } from './test-isolation-validation';\n\nlet waitForSettled = true;\n\nexport function setupTest(hooks, _options) {\n  let options = { waitForSettled, ..._options };\n\n  hooks.beforeEach(function (assert) {\n    let testMetadata = getTestMetadata(this);\n    testMetadata.framework = 'qunit';\n\n    return setupContext(this, options).then(() => {\n      let originalPauseTest = this.pauseTest;\n      this.pauseTest = function QUnit_pauseTest() {\n        assert.timeout(-1); // prevent the test from timing out\n        return originalPauseTest.call(this);\n      };\n    });\n  });\n\n  hooks.afterEach(function () {\n    return teardownContext(this, options);\n  });\n}\n\nexport function setupRenderingTest(hooks, _options) {\n  let options = { waitForSettled, ..._options };\n\n  setupTest(hooks, options);\n\n  hooks.beforeEach(function () {\n    return setupRenderingContext(this);\n  });\n}\n\nexport function setupApplicationTest(hooks, _options) {\n  let options = { waitForSettled, ..._options };\n\n  setupTest(hooks, options);\n\n  hooks.beforeEach(function () {\n    return setupApplicationContext(this);\n  });\n}\n\n/**\n   Uses current URL configuration to setup the test container.\n\n   * If `?nocontainer` is set, the test container will be hidden.\n   * If `?devmode` or `?fullscreencontainer` is set, the test container will be\n     made full screen.\n\n   @method setupTestContainer\n */\nexport function setupTestContainer() {\n  let testContainer = document.getElementById('ember-testing-container');\n  if (!testContainer) {\n    return;\n  }\n\n  let params = QUnit.urlParams;\n\n  if (params.devmode || params.fullscreencontainer) {\n    testContainer.classList.add('ember-testing-container-full-screen');\n  }\n\n  if (params.nocontainer) {\n    testContainer.classList.add('ember-testing-container-hidden');\n  }\n}\n\n/**\n   Instruct QUnit to start the tests.\n   @method startTests\n */\nexport function startTests() {\n  QUnit.start();\n}\n\n/**\n   Sets up the `Ember.Test` adapter for usage with QUnit 2.x.\n\n   @method setupTestAdapter\n */\nexport function setupTestAdapter() {\n  Ember.Test.adapter = QUnitAdapter.create();\n}\n\n/**\n  Ensures that `Ember.testing` is set to `true` before each test begins\n  (including `before` / `beforeEach`), and reset to `false` after each test is\n  completed. This is done via `QUnit.testStart` and `QUnit.testDone`.\n\n */\nexport function setupEmberTesting() {\n  QUnit.testStart(() => {\n    // eslint-disable-next-line ember/no-ember-testing-in-module-scope\n    Ember.testing = true;\n  });\n\n  QUnit.testDone(() => {\n    // eslint-disable-next-line ember/no-ember-testing-in-module-scope\n    Ember.testing = false;\n  });\n}\n\n/**\n  Ensures that `Ember.onerror` (if present) is properly configured to re-throw\n  errors that occur while `Ember.testing` is `true`.\n*/\nexport function setupEmberOnerrorValidation() {\n  QUnit.module('ember-qunit: Ember.onerror validation', function () {\n    QUnit.test('Ember.onerror is functioning properly', function (assert) {\n      assert.expect(1);\n      let result = validateErrorHandler();\n      assert.ok(\n        result.isValid,\n        `Ember.onerror handler with invalid testing behavior detected. An Ember.onerror handler _must_ rethrow exceptions when \\`Ember.testing\\` is \\`true\\` or the test suite is unreliable. See https://git.io/vbine for more details.`\n      );\n    });\n  });\n}\n\nexport function setupResetOnerror() {\n  QUnit.testDone(resetOnerror);\n}\n\nexport function setupTestIsolationValidation(delay) {\n  waitForSettled = false;\n  _backburner.DEBUG = true;\n  QUnit.on('testStart', () => installTestNotIsolatedHook(delay));\n}\n\n/**\n   @method start\n   @param {Object} [options] Options to be used for enabling/disabling behaviors\n   @param {Boolean} [options.setupTestContainer] If `false` the test container will not\n   be setup based on `devmode`, `dockcontainer`, or `nocontainer` URL params.\n   @param {Boolean} [options.startTests] If `false` tests will not be automatically started\n   (you must run `QUnit.start()` to kick them off).\n   @param {Boolean} [options.setupTestAdapter] If `false` the default Ember.Test adapter will\n   not be updated.\n   @param {Boolean} [options.setupEmberTesting] `false` opts out of the\n   default behavior of setting `Ember.testing` to `true` before all tests and\n   back to `false` after each test will.\n   @param {Boolean} [options.setupTestIsolationValidation] If `false` test isolation validation\n   will be disabled.\n   @param {Number} [options.testIsolationValidationDelay] When using\n   setupTestIsolationValidation this number represents the maximum amount of\n   time in milliseconds that is allowed _after_ the test is completed for all\n   async to have been completed. The default value is 50.\n */\nexport function start(options = {}) {\n  if (options.setupTestContainer !== false) {\n    setupTestContainer();\n  }\n\n  if (options.setupTestAdapter !== false) {\n    setupTestAdapter();\n  }\n\n  if (options.setupEmberTesting !== false) {\n    setupEmberTesting();\n  }\n\n  if (\n    typeof options.setupTestIsolationValidation !== 'undefined' &&\n    options.setupTestIsolationValidation !== false\n  ) {\n    setupTestIsolationValidation(options.testIsolationValidationDelay);\n  }\n\n  if (options.startTests !== false) {\n    startTests();\n  }\n\n  setupResetOnerror();\n}\n"],"names":["macroCondition","getOwnConfig","theme","undefined","importSync","disableContainerStyles","Testem","hookIntoTestFramework","waitForSettled","setupTest","hooks","_options","options","beforeEach","assert","testMetadata","getTestMetadata","framework","setupContext","then","originalPauseTest","pauseTest","QUnit_pauseTest","timeout","call","afterEach","teardownContext","setupRenderingTest","setupRenderingContext","setupApplicationTest","setupApplicationContext","setupTestContainer","testContainer","document","getElementById","params","QUnit","urlParams","devmode","fullscreencontainer","classList","add","nocontainer","startTests","start","setupTestAdapter","Ember","Test","adapter","QUnitAdapter","create","setupEmberTesting","testStart","testing","testDone","setupEmberOnerrorValidation","module","test","expect","result","validateErrorHandler","ok","isValid","setupResetOnerror","resetOnerror","setupTestIsolationValidation","delay","_backburner","DEBUG","on","installTestNotIsolatedHook","testIsolationValidationDelay"],"mappings":"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"}